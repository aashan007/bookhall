let User,jwt;_07d‍.x([["register",()=>register],["login",()=>login]]);_07d‍.w("../models/user",[["default",["User"],function(v){User=v}]]);_07d‍.w("jsonwebtoken",[["default",["jwt"],function(v){jwt=v}]]);


       const register = async (req,res)=>{

     const {name,email,password} = req.body;
     //validation
     _07d‍.g.console.log(req.body);
     if(!name) return res.status(400).send('Name is required');
     if(!password || password.length<6)
      {
          return res
                    .status(400)
                    .send('Password is required and should be min 6 characters long');
      }    
     
        
     let userExist = await User.findOne({email}).exec()

     if(userExist) return res.status(400).send('Email is taken')
     // register the user

     const user = new User(req.body);

     try{
          await user.save();
          _07d‍.g.console.log('USER CREATED',user);
          return res.json({ok:true});
     }
     catch(err){
          _07d‍.g.console.log('CREATE USER FAILED',err);
          return res.status(400).send('Error. Try Again')
     }
}

       const login = async(req,res)=>{
     //console.log(req.body);
     const {email,password} = req.body;
     try{
          //check if user with email exist

          let user =await  User.findOne({email}).exec();

          if(!user)
               res.status(400).send("User with that email not found")

          user.comparePassword(password, (err,match)=>{
               //console.log('compare password in logn err',err)
               if(!match || err) return res.status(400).send("Wrong password")
               //Generate a token then send as response to client
               let token = jwt.sign({_id:user._id},process.env.JWT_SECRET,{
                    expiresIn: '7d'
               });

               res.json({token,user:{
                    _id:user._id,
                    name:user.name,
                    email:user.email,
                    createdAt:user.createdAt,
                    updatedAt:user.updatedAt

               }})
          })
         
     }
     catch(err){
          _07d‍.g.console.log('LOGIN ERROR',err);
          res.status(400).send("Signin Failed");
     }
}